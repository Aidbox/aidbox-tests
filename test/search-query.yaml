id: search-query
desc: |
  See https://docs.aidbox.app/basic-concepts/search-1/searchquery


steps:
- id: clean
  desc: Clear all patients
  POST: /$sql
  body: 'TRUNCATE patient'
  match:
    status: 200

- id: upload-patients
  PUT: /
  body:
  - id: pt-1
    resourceType: Patient
    name: [{given: [Vlad], family: Ganshin}]
    birthDate: '1994-09-26'
    address: [{city: St. Petersburg}]
    gender: male
    text:
      status: additional
      div: Healthy Patient
  - id: pt-2
    resourceType: Patient
    name: [{given: [Anna], family: Chu}]
    birthDate: '1994-08-07'
    address: [{city: Kolpino}]
    gender: female
    text:
      status: additional
      div: Unknown
  - id: pt-3
    resourceType: Patient
    name: [{given: [Ivan], family: Shilov}]
    address: [{city: Pushkin}]
    gender: male
    birthDate: '1994-05-01'
    text:
      status: additional
      div: In progress
  - id: pt-4
    resourceType: Patient
    name: [{given: [Victor], family: Sidorov}]
    address: [{city: Pavlovsk}]
    gender: male
    birthDate: '1990-02-01'
    text:
      status: additional
      div: Old
  match:
    status: 200

- id: create-search-query
  PUT: /SearchQuery/q-1
  body:
    resource: {id: 'Patient', resourceType: 'Entity'}
    # give alias to patient table
    as: pt
    # enable total query
    total: true 
    # basic query
    query:
      where: "(pt.resource->>'birthDate')::date > '1994-01-01'"
      order-by: pt.id desc
    params:
      gender:
        type: string
        where: "pt.resource->>'gender' = {{params.gender}}"
      family:
        type: string
        format: '%?%'
        where: |
          aidbox_text_search(knife_extract_text(pt.resource, $$[["name","family"]]$$)) ilike {{params.family}}
  match:
    status: 200
    body:
      as: pt
      query: {where: '(pt.resource->>''birthDate'')::date > ''1994-01-01''', order-by: pt.id desc}
      total: true
      params:
        family:
          type: string
          where: |
            aidbox_text_search(knife_extract_text(pt.resource, $$[["name","family"]]$$)) ilike {{params.family}}
          format: '%?%'
        gender: {type: string, where: 'pt.resource->>''gender'' = {{params.gender}}'}
      resource: {id: Patient, resourceType: Entity}
      id: q-1
      resourceType: SearchQuery

- id: search-against-search-query-without-additional-params
  GET: /alpha/Patient?query=q-1
  match:
    status: 200
    body:
      resourceType: Bundle
      type: searchset
      entry:
      - resource:
          id: pt-3
          resourceType: Patient
      - resource:
          id: pt-2
          resourceType: Patient
      - resource:
          id: pt-1
          resourceType: Patient
      total: 3

- id: search-against-search-query-with-gender-param
  GET: "/alpha/Patient?query=q-1&gender=male"
  match:
    status: 200
    body:
      resourceType: Bundle
      type: searchset
      entry:
      - resource:
          id: pt-3
          resourceType: Patient
      - resource:
          id: pt-1
          resourceType: Patient
      total: 2

- id: search-against-search-query-with-gender-family-params
  GET: "/alpha/Patient?query=q-1&gender=male&family=Ganshin"
  match:
    status: 200
    body:
      resourceType: Bundle
      type: searchset
      entry:
      - resource:
          id: pt-1
          resourceType: Patient
      total: 1
